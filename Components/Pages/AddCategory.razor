@page "/add-category"
@using MoneyManager.Models
@using MoneyManager.Services
@inject ICategoryService categoryService

<style>
    button.btn-primary {
        background-color: #ff69b4 !important; 
        border-color: #ff69b4 !important;
    }

        button.btn-primary:hover {
            background-color: #ff4f94 !important; 
            border-color: #ff4f94 !important;
        }
</style>
<!-- Add Category Page -->
<h3>Add category</h3>
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <form class="bg-light border rounded-3 shadow-sm p-4">
                <div class="mb-3">
                    <label for="categoryName" class="form-label fw-bold">Category Name</label>
                    <input type="text" id="categoryName" class="form-control" @bind="newCategory.Name" placeholder="Enter category name" />
                </div>

                <!-- Display error message if it exists -->
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger text-center">
                        @errorMessage
                    </div>
                }
                <!-- Display success message if it exists -->
                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="alert alert-success text-center">
                        @successMessage
                    </div>
                }
                <!-- Button to trigger the "SubmitCategory" method -->
                <button type="button" class="btn btn-primary w-100 mt-3" @onclick="SubmitCategory">Add Category</button>
            </form>
        </div>
    </div>
</div>

@code {
    private Category newCategory = new Category(); // Model to hold the new category data
    // Variables to store error and success messages
    private string errorMessage;
    private string successMessage;
    // Method to handle category submission
    private async Task SubmitCategory()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(newCategory.Name)) // Validate if the category name is provided
            {
                errorMessage = "Category name cannot be empty.";
                successMessage = null;
                return;
            }
            // Check if the category already exists
            var existingCategories = await categoryService.LoadCategoriesAsync();
            if (existingCategories.Any(c => c.Name.Equals(newCategory.Name, StringComparison.OrdinalIgnoreCase)))
            {
                errorMessage = "Category already exists.";
                successMessage = null;
                return;
            }
            await categoryService.SaveCategoryAsync(newCategory); // Save the new category
      // Reset the form and display success message
            newCategory = new Category();
            successMessage = "Category added successfully.";
            errorMessage = null;
        }
        catch (Exception ex)
        {
            // Show an error message if there was any failure during submission.
            errorMessage = "Failed to add category.";
            successMessage = null;
            Console.WriteLine(ex.Message);
        }
    }

}
